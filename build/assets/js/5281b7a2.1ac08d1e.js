"use strict";(self.webpackChunkdocs_loreum_org=self.webpackChunkdocs_loreum_org||[]).push([[2443],{936:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"architecture","title":"Systems Architecture","description":"Overview","source":"@site/docs/architecture.md","sourceDirName":".","slug":"/architecture","permalink":"/architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/loreum-org/docs/edit/main/docs/architecture.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Tokenomics","permalink":"/tokenomics"},"next":{"title":"Governance","permalink":"/governance"}}');var r=i(4848),t=i(8453);const a={},l="Systems Architecture",d={},o=[{value:"Overview",id:"overview",level:2},{value:"Loreum Node",id:"loreum-node",level:2},{value:"1. Data Processing and Storage",id:"1-data-processing-and-storage",level:3},{value:"2. Retrieval-Augmented Generation (RAG) Capability",id:"2-retrieval-augmented-generation-rag-capability",level:3},{value:"3. Sensor and Agent Integration",id:"3-sensor-and-agent-integration",level:3},{value:"4. Autonomy and Collaboration",id:"4-autonomy-and-collaboration",level:3},{value:"5. Reputation System",id:"5-reputation-system",level:3},{value:"Sensor Hub",id:"sensor-hub",level:2},{value:"Agent Hub",id:"agent-hub",level:2},{value:"Data Flow",id:"data-flow",level:2},{value:"1. Data Ingestion",id:"1-data-ingestion",level:4},{value:"2. Agent Interaction",id:"2-agent-interaction",level:4},{value:"3. AI Pipeline Integration",id:"3-ai-pipeline-integration",level:4},{value:"4. Data Processing Workflow",id:"4-data-processing-workflow",level:4},{value:"The Network",id:"the-network",level:2}];function c(e){const n={h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"systems-architecture",children:"Systems Architecture"})}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The Loreum Network's architecture is designed to support a decentralized, autonomous ecosystem where human and AI agents collaborate seamlessly. Below is an in-depth look at its core components:"}),"\n",(0,r.jsx)(n.h2,{id:"loreum-node",children:"Loreum Node"}),"\n",(0,r.jsx)(n.p,{children:"A Loreum Node is a modular, decentralized unit that serves as the foundation of the Loreum Network. Each node is designed to operate autonomously while contributing monetizable data and intelligence to the broader network."}),"\n",(0,r.jsx)(n.h3,{id:"1-data-processing-and-storage",children:"1. Data Processing and Storage"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Collecting, processing, and storing data from local and external sources"}),"\n",(0,r.jsx)(n.li,{children:"Leveraging both real-time streaming and fetch-requested data pipelines for seamless integration"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-retrieval-augmented-generation-rag-capability",children:"2. Retrieval-Augmented Generation (RAG) Capability"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Equipped with a RAG vector database for storing and retrieving contextually relevant information"}),"\n",(0,r.jsx)(n.li,{children:"Enhancing decision-making by combining historical knowledge with real-time data"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-sensor-and-agent-integration",children:"3. Sensor and Agent Integration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Acting as a hub for the Sensor Hub, responsible for gathering, processing, and contextualizing data inputs"}),"\n",(0,r.jsx)(n.li,{children:"Hosting the Agent Hub, where human and AI agents collaborate to perform specialized tasks"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"4-autonomy-and-collaboration",children:"4. Autonomy and Collaboration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Operating independently with local governance and resource management"}),"\n",(0,r.jsx)(n.li,{children:"Collaborating with other nodes by sharing data and insights, governed by a monetized query exchange system"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"5-reputation-system",children:"5. Reputation System"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Each node's trustworthiness and performance are measured through a reputation mechanism"}),"\n",(0,r.jsx)(n.li,{children:"High-performing nodes gain more queries, governance influence, and rewards within the network"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"sensor-hub",children:"Sensor Hub"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Sensor Hub"})," is responsible for:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Gathering real-time data from various sources."}),"\n",(0,r.jsx)(n.li,{children:"Processing fetch-requested data for on-demand needs."}),"\n",(0,r.jsx)(n.li,{children:"Serving as the data ingestion and processing layer of the network."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"agent-hub",children:"Agent Hub"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Agent Hub"})," facilitates:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Adding and managing various agents to perform specific tasks and functions."}),"\n",(0,r.jsx)(n.li,{children:"Enabling modular and extensible development of network functionalities."}),"\n",(0,r.jsx)(n.li,{children:"Supporting collaboration between human and AI agents."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"data-flow",children:"Data Flow"}),"\n",(0,r.jsx)(n.h4,{id:"1-data-ingestion",children:"1. Data Ingestion"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Sensor Hub:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Serves as the data ingestion layer, collecting information from multiple sources, such as APIs, IoT devices, blockchain events, or user-provided inputs."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Real-Time Streams:"})," Processes real-time data streams using WebSocket APIs or event-based triggers, enabling instant updates."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Batch and Fetch Requests:"})," Handles periodic or on-demand data requests via APIs, ensuring data completeness."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Preprocessing:"})," Applies data cleaning, normalization, and format conversions to prepare data for downstream tasks."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Data Storage:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Vector Database:"})," Stores structured and unstructured data in an optimized format for AI retrieval, enabling semantic search and context-rich insights."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Real-Time Cache:"})," A fast-access storage layer (e.g., Redis) for frequently queried data, improving responsiveness for time-sensitive operations."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"2-agent-interaction",children:"2. Agent Interaction"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Agent Hub:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Acts as the execution layer where modular agents interact with ingested data to perform specific tasks or generate insights. Each agent is designed for a unique function, such as trading, analytics, or governance."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dynamic Querying:"})," Agents dynamically query the vector database using natural language or structured queries, leveraging the Haystack AI pipeline for retrieval-augmented generation (RAG)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"3-ai-pipeline-integration",children:"3. AI Pipeline Integration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Document Retrieval:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Employs a dense retrieval system using embeddings to identify relevant documents, streams, or data fragments based on semantic similarity."}),"\n",(0,r.jsx)(n.li,{children:"Implements retrieval models like DPR (Dense Passage Retrieval) or BM25 for relevance scoring."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Question Answering:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Agents issue queries in natural language, and the pipeline uses the vector database to return contextually relevant data."}),"\n",(0,r.jsx)(n.li,{children:"The pipeline supports extractive (finding exact answers in text) and generative (providing synthesized answers) capabilities."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Indexing and Embedding Creation:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Data ingested through the Sensor Hub is tokenized and embedded into high-dimensional vectors."}),"\n",(0,r.jsx)(n.li,{children:"Updates occur in real-time or on schedule, ensuring the index remains fresh and relevant."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Pipeline Stages:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Preprocessor:"})," Cleans and splits data into smaller chunks for efficient indexing."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Retriever:"})," Selects the most relevant chunks of data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reader:"})," Extracts specific information from retrieved chunks or generates detailed answers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Generator:"})," (Optional) Provides synthesized and contextual responses for complex queries."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"4-data-processing-workflow",children:"4. Data Processing Workflow"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Input Handling:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Incoming data is categorized into streams, batches, or on-demand requests."}),"\n",(0,r.jsx)(n.li,{children:"NLP preprocessing, entity recognition, or sentiment analysis can be applied as needed."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Knowledge Base Updates:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Parsed data is indexed into the vector database, enabling enhanced retrieval capabilities."}),"\n",(0,r.jsx)(n.li,{children:"Metadata (e.g., timestamps, tags) is added to enrich query results and contextual relevance."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Agent Execution:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Agents leverage the pipeline to access and process data."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A DeFi trading agent queries price data and historical trends for market predictions."}),"\n",(0,r.jsx)(n.li,{children:"A supply chain agent fetches IoT sensor data to optimize logistics in real-time."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Result Delivery:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Responses are routed back to users or other systems through the Agent Hub."}),"\n",(0,r.jsx)(n.li,{children:"Feedback loops allow agents to refine tasks or request additional data iteratively."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"the-network",children:"The Network"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Distributed Architecture"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Nodes as Independent Entities:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Each node represents a Loreum Node, which contains its own vector database, indexing relevant data."}),"\n",(0,r.jsx)(n.li,{children:"Nodes are autonomous and can manage their own ingestion, storage, and processing pipelines."}),"\n",(0,r.jsx)(n.li,{children:"A node\u2019s data and embeddings are tailored to its specific purpose, whether domain-specific (e.g., finance, healthcare) or general."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Interconnected Nodes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Nodes are interconnected through a peer-to-peer network."}),"\n",(0,r.jsx)(n.li,{children:"When a query is issued, the network collaboratively identifies the most relevant nodes based on metadata, reputation scores, or expertise."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Data Storage and Indexing Across Nodes"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Federated Vector Databases:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Each node maintains a vector database that stores embeddings created from its local dataset."}),"\n",(0,r.jsx)(n.li,{children:"The distributed structure ensures no single point of failure, and nodes can index both structured and unstructured data (e.g., documents, IoT data, APIs)."}),"\n",(0,r.jsx)(n.li,{children:"Data redundancy and synchronization ensure robustness while maintaining autonomy for nodes."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Localized Indexing:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Nodes only index data that is relevant to their specialized domain."}),"\n",(0,r.jsx)(n.li,{children:"This localized indexing improves retrieval efficiency and reduces unnecessary data sharing across the network."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Query Execution in a Distributed System"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Query Routing:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A query is routed to relevant nodes based on metadata tags, vector similarities, or domain-specific reputation scores."}),"\n",(0,r.jsx)(n.li,{children:"The querying node either broadcasts the query to all nodes or sends it to a select few based on pre-defined criteria."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Semantic Search Across Nodes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Nodes use their local vector database to retrieve relevant documents or embeddings."}),"\n",(0,r.jsx)(n.li,{children:"Results from multiple nodes are aggregated and ranked to ensure the highest-quality response."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parallel Processing:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Queries can be processed in parallel across nodes, significantly reducing response time."}),"\n",(0,r.jsx)(n.li,{children:"This parallelism enables scalability, as additional nodes enhance processing power rather than bottleneck it."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Collaboration and Monetization"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Monetized Query Responses:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Nodes can monetize their contributions by charging for responses, creating an economic incentive to participate in the network."}),"\n",(0,r.jsx)(n.li,{children:"Payment mechanisms (e.g., microtransactions via blockchain) ensure fair compensation based on contribution."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reputation-Based Participation:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Nodes with higher-quality responses and consistent reliability are rewarded with more queries, incentivizing good behavior and accurate data management."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Enhancing RAG\u2019s Capabilities with Distributed Nodes"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Diversity:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A distributed network allows RAG to access a broader spectrum of data sources."}),"\n",(0,r.jsx)(n.li,{children:"For example, one node might specialize in financial data while another focuses on medical research."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scalability:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"As the network grows, new nodes can be added without disrupting the overall architecture."}),"\n",(0,r.jsx)(n.li,{children:"Each node strengthens the collective intelligence of the network."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fault Tolerance and Decentralization:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The system does not rely on a single central server. If one node fails, others can handle the workload, ensuring uninterrupted service."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Real-World Example"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Imagine a decentralized RAG network where:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A user queries for blockchain analytics."}),"\n",(0,r.jsx)(n.li,{children:"The query is routed to nodes specializing in blockchain, each processing their local dataset."}),"\n",(0,r.jsx)(n.li,{children:"Responses are aggregated into a coherent result, leveraging insights from multiple sources."}),"\n",(0,r.jsx)(n.li,{children:"The user pays a small fee distributed among the contributing nodes."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.mermaid,{value:"graph LR\n    A[Sensor Hub] --\x3e B(Data Preprocessing)\n    B --\x3e C{Vector Database}\n    C --\x3e D(Real-Time Cache)\n    C --\x3e E(Agent Hub)\n    E --\x3e F(Modular Agents)\n    F --\x3e G(Query Processing)\n    G --\x3e H{Distributed Nodes}\n    H --\x3e I(Node 1)\n    H --\x3e J(Node 2)\n    H --\x3e K(Node N)\n    I --\x3e L((Peer-to-Peer Network))\n    J --\x3e L\n    K --\x3e L\n    L --\x3e M(Monetized Query Responses)\n    L --\x3e N(Reputation-Based Participation)\n    M --\x3e E\n    N --\x3e E"})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);